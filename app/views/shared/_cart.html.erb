<%  estimate = estimate rescue false
    editable = editable rescue false
    public = public rescue false
    colspan = estimate ? 2 : 4
    colspan += 1 if (editable && !estimate && !public)

    rowspan = 4
    rowspan += 1 if cart.fst?
    rowspan += 1 if cart.pst?
-%>
  <table id="shopping-cart" class="cart" border="<%= border rescue 0 %>" cellspacing="0" cellpadding="2" align="center" width="95%" bordercolor="#fc0">
<% if editable and !public then -%>
    <col width="*0"/>
    <col width="*1"/>
<% else -%>
    <col width="*1"/>
<% end -%>
    <col width="*3"/>
    <col width="*1"/>
    <col width="*1"/>
    <col width="*1"/>
    <thead>
      <tr>
<% if editable and !public then -%>
        <td>&nbsp;</td>
<% end -%>
        <th>Product No</th>
        <th>Description</th>
        <th class="number">Quantity</th>
        <th class="money">Unit Price</th>
        <th class="money">Extension</th>
      </tr>
    </thead>
    <tfoot>
      <tr>
<% if estimate -%>
        <td rowspan="<%= rowspan %>" colspan="2" style="font-size: 80%;">
          <p class="legalese" style="margin: 0; font-size: 100%; text-align: left;">
            <strong>Disclaimer</strong>:
<% if :formal == (legal rescue nil) then -%>
            A <%= Configuration.get(:deposit_percentage, @site) %>% deposit
            will be required to secure your installation date.  Balance due
            upon completion of installation.  Bookings are on a first come,
            first serve basis.  Some supplies are limited and subject to
            availability.  Footage stated is an estimate, actual footage will
            be billed based on the total number of strands used.
<% else -%>
            The estimate generated by this Free Estimator is based on the
            information provided by you and may not be the amount that will be
            invoiced by us if the work requested is completed.  The final amount
            billed will be based upon the number of strands of lights and
            ancillary products actually used to complete the work.
<% end -%>
          </p>
        </td>
<% end -%>
        <th colspan="<%= colspan %>" scope="row">Sub-total:</th>
        <td class="money"><%= number_to_currency cart.subtotal.format %></td>
      </tr>
<% if cart.respond_to?(:equipment_fee) and cart.equipment_fee > Money.empty then -%>
      <tr>
        <th colspan="<%= colspan %>" scope="row">Equipment Fee:</th>
        <td class="money"><%= number_to_currency cart.equipment_fee.format %></td>
      </tr>
<% end -%>
<% if cart.respond_to?(:transport_fee) and cart.transport_fee > Money.empty then -%>
      <tr>
        <th colspan="<%= colspan %>" scope="row">Transportation:</th>
        <td class="money"><%= number_to_currency cart.transport_fee.format %></td>
      </tr>
<% end -%>
<% if cart.respond_to?(:shipping_fee) and cart.shipping_fee > Money.empty then -%>
      <tr>
        <th colspan="<%= colspan %>" scope="row"><%= link_to 'Shipping', {:anchor => 'shipping'}, {:title => 'Update shipping information'} %>:</th>
        <td class="money"><%= number_to_currency cart.shipping_fee.format %></td>
      </tr>
<% end -%>
<% if cart.fst? -%>
      <tr>
        <th colspan="<%= colspan %>" scope="row">
          <%= h cart.fst_name %> (<%= format_money(cart.fst_subtotal) %> &times; <%= number_to_percentage cart.fst_rate / 1000.0, :precision => 0 %>):
        </th>
        <td class="money"><%= number_to_currency cart.fst_amount.format %></td>
      </tr>
<% end -%>
<% if cart.pst? -%>
      <tr>
        <th colspan="<%= colspan %>" scope="row">
          <%= h cart.pst_name %> (<%= format_money(cart.pst_subtotal) %> &times; <%= number_to_percentage cart.pst_rate / 1000.0, :precision => 0 %>):
        </th>
        <td class="money"><%= number_to_currency cart.pst_amount.format %></td>
      </tr>
<% end -%>
      <tr class="total">
        <th colspan="<%= colspan %>" scope="row">Total:</th>
        <td class="money"><%= number_to_currency cart.total.format(:html, :with_currency) %></td>
      </tr>
<% if cart.respond_to?(:deposit_amount) and cart.deposit_amount > Money.empty -%>
      <tr>
        <th colspan="<%= colspan %>" scope="row">Deposit:</th>
        <td class="money"><%= number_to_currency cart.deposit_amount.format(:html, :with_currency) %></td>
      </tr>
      <tr>
        <th colspan="<%= colspan %>" scope="row">Total to pay:</th>
        <td class="money"><%= number_to_currency (cart.total - cart.deposit_amount).format(:html, :with_currency) %></td>
      </tr>
<% end -%>
<% if cart.respond_to?(:balance) and cart.balance > Money.empty -%>
      <tr>
        <th colspan="<%= colspan %>" scope="row">Balance due:</th>
        <td class="money"><%= number_to_currency cart.balance.format(:html, :with_currency) %></td>
      </tr>
<% end -%>
    </tfoot>
    <tbody>
<%= render :partial => 'shared/item', :collection => cart.lines, :locals => {:editable => editable, :public => public} %>
    </tbody>
  </table>
<% if editable and !public then -%>
<%= link_to_remote("#{image_tag('icons/basket_add.png', :size => '16x16', :alt => 'New item')} New item", {:update => 'cart-edit-section', :complete => visual_effect(:blind_down, 'cart-edit-section'), :url => {:action => :new_item, :type => 'product', :parent_id => cart.id}}) %>
<%= link_to_remote("#{image_tag('icons/basket_add.png', :size => '16x16', :alt => 'New comment')} New comment", {:update => 'cart-edit-section', :complete => visual_effect(:blind_down, 'cart-edit-section'), :url => {:action => :new_item, :type => 'comment', :parent_id => cart.id}}) %>
<%= link_to_remote("#{image_tag('icons/basket_add.png', :size => '16x16', :alt => 'New manhours')} New manhours", {:update => 'cart-edit-section', :complete => visual_effect(:blind_down, 'cart-edit-section'), :url => {:action => :new_item, :type => 'manhours', :parent_id => cart.id}}) %>
<div id="cart-edit-section" style="display:none"></div>
<script type="text/javascript" language="JavaScript"><!--
function reorder(source, target) {
  <%= remote_function(:update => 'cart',
        :url => {:action => :reorder_items},
        :with => '"source="+source.parentNode.id.substring(1)+"&target="+target.id.substring(1)') %>
}

Behaviour.register({
  '#shopping-cart .drag-source': function(el) {
    new Draggable(el, {revert: true, ghosting: false, constraint: 'vertical'});
  },
  '#shopping-cart .drop-target': function(el) {
    Droppables.add(el, {hoverclass: 'hover', onDrop: reorder});
  }
});

Behaviour.apply();
//--></script>
<% end -%>
